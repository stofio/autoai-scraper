<?php

function test_website_scrape($websiteArray, $url = null) {
    $scraper = new ScrapaWebsite();

    $websiteConfig = [
        'baseUrl' => $websiteArray['baseUrl'],
        'selectors' => [
            'catPageLastArticle' => stripslashes($websiteArray['catPageLastArticle']),
            'title' => stripslashes($websiteArray['title']),
            'content' => stripslashes($websiteArray['content']),
            'imageUrl' => stripslashes(stripslashes($websiteArray['imageUrl'])),
            'newsLabelSel' => stripslashes($websiteArray['newsLabelSel']),
            'newsLabelText' => stripslashes($websiteArray['newsLabelText'])
        ],
        'defaultImageCredit' => stripslashes($websiteArray['newsLabelText'])
    ];

    $scrapedData = $scraper->scrapeWebsite($websiteConfig, $url);
    return $scrapedData;
}




//return
function run_single_auto_post($singleSource, $url = null) {
        my_second_log('INFO', 'START WITH SOURCE: ' . $singleSource['baseUrl']);
 
        $categoryIDToPost = $singleSource['categoryId'];
        
        $scrapedData = test_website_scrape($singleSource, $url); //return scraped data


        if($scrapedData == null) {
            return null;
        }
        else {
            $AIGeneratedData = checkScrapedDataGenerateAiAndPost($scrapedData, $categoryIDToPost);

            if($url != null) {
                return $AIGeneratedData['post_url'];
            }
            else {
                return $AIGeneratedData;
            }
        }
     
}



function checkScrapedDataGenerateAiAndPost($scrapedData, $categoryID) {
    if (is_array($scrapedData)) {
        $title = $scrapedData['title'];
        $url = $scrapedData['original-url'];

        if (!isUrlInPublishedList($url)) {
            my_second_log('INFO', 'Scraped data success');

            $post_id = getAiAndPost($scrapedData, $categoryID); // return post ID

            if($post_id == 0) {
                my_second_log('ERROR', 'An error occured during posting the article, try again.');
                return;
            }

            if ($post_id !== 'error') {
                addToPublishedList($scrapedData['original-url']);

                //add original url to meta
                add_post_meta($post_id, 'original_scr_url', $url, true);

                
                my_second_log('INFO', 'SUCCESS POST posted with ID: ' . $post_id);
                
                
                //get created post url
                $post_url = get_permalink($post_id);
                return array('post_url' => $post_url, 'scraped_url' => $url);
            } else {
                my_second_log('ERROR', 'Failed to process and post article: ' . $url);
            }
        }
        else {
            my_second_log('INFO', 'Skipped, already scraped: ' . $url);
        }
    } else {
        my_second_log('ERROR', 'Invalid scraped data format: ');
    }
}




function run_scraper_from_url($url) {
    $clsScraper = new ScrapaWebsite();

    //get all sources
    //remove everything except baseURL

    //take the base url from the url given
    //search in the baseURLs array if the base url is there
    //if is there, get the data to scrape and scrape
    //return POST URL

    //else if its not in anyone
    //return 'errorNoConfigurationForUrl'

    //else 
    //return null;

    $digitaltrendsMobileConfig = [
        'baseUrl' => 'https://www.digitaltrends.com/mobile-news/',
        'selectors' => [
            'catPageLastArticle' => '.b-mem__post--xl',
            'title' => 'header#dt-post-title h1',
            'content' => '#dt-post-content',
            'imageUrl' => 'meta[property="og:image"]',
            'newsLabelSel' => '.b-headline__top li a span',
            'newsLabelText' => 'News'
        ],
        'defaultImageCredit' => 'Digital Trends'
    ];

    $article = $clsScraper->scrapeWebsite($digitaltrendsMobileConfig, $url);
    $scrapedAndPosted = checkScrapedDataGenerateAiAndPost($article, 34);
    my_log('LOOG');
    my_log($scrapedAndPosted['post_url']);
    my_log('LOOGggggg');
    my_log($scrapedAndPosted);
    return $scrapedAndPosted['post_url'];//maybe deprecateddeprecated mayb
}



//get AI article and post
function getAiAndPost($scrapedArticle, $categoryID) {

    //
    //get AI ARTICLE
    //
    $aiGeneratedContent = generateContentWithAI($scrapedArticle);


    if (strlen($aiGeneratedContent['content']) < 500) {
        my_second_log('ERROR', 'Content generated by AI too low, post not created for title: ' . $scrapedArticle['title']);
        return;
    }

    // Check if content generation was successful
    if ($aiGeneratedContent === 'error') {
        my_second_log('ERROR', 'Failed to generate content with AI for article: ' . $scrapedArticle['title']);
        return 'error';
    }

    my_second_log('INFO', 'AI content created success');

    my_log($aiGeneratedContent);

    //
    // Create a NEW POST with the AI-generated content
    //
    return createNewPost($aiGeneratedContent, $categoryID); // Returns 'success' or 'error'//maybe deprecated
}











/**
 * 
 *  REWRITE
 * 
 */

function getAiAndRePost($scrapedArticle, $post_id) {

    //
    //get AI ARTICLE
    //
    $aiGeneratedContent = generateContentWithAI($scrapedArticle);


    if (strlen($aiGeneratedContent['content']) < 500) {
        my_second_log('ERROR', 'Content generated by AI too low, post not recreated.');
        return;
    }

    // Check if content generation was successful
    if ($aiGeneratedContent === 'error') {
        my_second_log('ERROR', 'Failed to regenerate content with AI.');
        return 'error';
    }

    my_second_log('INFO', 'AI content recreated success.');

    //
    // Create a NEW POST with the AI-generated content
    //
    return recreatePost($aiGeneratedContent, $post_id); // Returns 'success' or 'error'//maybe deprecated
}



function rewritePostAndPost($source, $original_url, $post_id) {
    
    my_second_log('INFO', 'START REWRITING: ' . $original_url);

    $scrapedData = test_website_scrape($source, $original_url); //return scraped data


    if($scrapedData == null) {
        my_second_log('ERROR', 'Error scraped data is null');
        return null;
    }
    else if (is_array($scrapedData)) {
        $title = $scrapedData['title'];
        $url = $scrapedData['original-url'];

            my_second_log('INFO', 'Rescraped data success');

            $post_id = getAiAndRePost($scrapedData, $post_id); // return post ID
            if ($post_id !== 'error') {
                my_second_log('INFO', 'SUCCESS REWRITING updated ID: ' . $post_id);
            } else {
                my_second_log('ERROR', 'Failed to process and post article: ' . $url);
            }
        
    } else {
        my_second_log('ERROR', 'Invalid scraped data format: ');
    }
}