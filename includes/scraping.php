<?php

function getScrapedData($sourceConfiguration, $url = null) {
    
    $scraper = new ScrapaWebsite();

    //preapare args for scraping
    $websiteConfig = [
        'baseUrl' => $sourceConfiguration['baseUrl'],
        'selectors' => [
            'catPageLastArticle' => stripslashes($sourceConfiguration['catPageLastArticle']),
            'title' => stripslashes($sourceConfiguration['title']),
            'content' => stripslashes($sourceConfiguration['content']),
            'imageUrl' => stripslashes(stripslashes($sourceConfiguration['imageUrl'])),
            'newsLabelSel' => stripslashes($sourceConfiguration['newsLabelSel']),
            'newsLabelText' => stripslashes($sourceConfiguration['newsLabelText'])
        ],
        'defaultImageCredit' => stripslashes($sourceConfiguration['newsLabelText'])
    ];

    $scrapedData = $scraper->scrapeWebsite($websiteConfig, $url);
    return $scrapedData;
}

//return
function run_single_auto_post($singleSource, $url = null) {
        my_second_log('INFO', 'START WITH SOURCE: ' . $singleSource['baseUrl']);
        
        $scrapedData = getScrapedData($singleSource, $url); //return scraped data

        if($scrapedData == null) {
            return null;
        }
        else {

            if($url) { //if its From Url
                $AIGeneratedData = generateAiAndPost($scrapedData, $singleSource, true);
            }
            else {
                $AIGeneratedData = generateAiAndPost($scrapedData, $singleSource);
            }

            if($url != null) {
                return $AIGeneratedData['post_url'];
            }
            else {
                return $AIGeneratedData;
            }
        }
}

function generateAiAndPost($scrapedData, $source, $isFromUrl = false) {
    if (is_array($scrapedData)) {
        $title = $scrapedData['title'];
        $url = $scrapedData['original-url'];

        if($isFromUrl) {
            $published = false;
        }
        else {
            $published = isUrlInPublishedList($url);
        }


        if (!$published) {
            my_second_log('INFO', 'Scraped data success');

            $post_id = getAiAndPost($scrapedData, $source); // return post ID

            if($post_id == 0) {
                my_second_log('ERROR', 'An error occured during posting the article, try again.');
                return;
            }

            if ($post_id !== 'error') {
                addToPublishedList($scrapedData['original-url']);

                //add original url to meta
                add_post_meta($post_id, 'original_scr_url', $url, true);

                
                my_second_log('INFO', 'SUCCESS POST posted with ID: ' . $post_id);
                
                
                //get created post url
                $post_url = get_permalink($post_id);
                return array('post_url' => $post_url, 'scraped_url' => $url);
            } else {
                my_second_log('ERROR', 'Failed to process and post article: ' . $url);
            }
        }
        else {
            my_second_log('INFO', 'Skipped, already scraped: ' . $url);
        }
    } else {
        my_second_log('ERROR', 'Invalid scraped data format: ');
    }
}


//get AI article and post
function getAiAndPost($scrapedArticle, $source) {

    //
    //get AI ARTICLE
    //
    $aiGeneratedContent = generateContentWithAI($scrapedArticle, $source);


    if (strlen($aiGeneratedContent['content']) < 500) {
        my_second_log('ERROR', 'Content generated by AI too low, post not created for title: ' . $scrapedArticle['title']);
        return;
    }

    //fix AI excerpt fail, take first words of content
    if( $aiGeneratedContent['excerpt'] == null ) {
        $aiGeneratedContent['excerpt'] = getSubstringBeforeFirstDot($aiGeneratedContent['content']);
    }

    // Check if content generation was successful
    if ($aiGeneratedContent === 'error') {
        my_second_log('ERROR', 'Failed to generate content with AI for article: ' . $scrapedArticle['title']);
        return 'error';
    }

    my_second_log('INFO', 'AI content created success');


    //
    // Create a NEW POST with the AI-generated content
    //


    return createNewPost($aiGeneratedContent, $source['categoryId']); // Returns 'success' or 'error'//maybe deprecated
}

function getSubstringBeforeFirstDot($inputString) {
    // Find the position of the first dot in the string
    $firstDotPosition = strpos($inputString, '.');

    // Check if a dot was found
    if ($firstDotPosition !== false) {
        // Extract the substring before the first dot
        $substringBeforeDot = substr($inputString, 0, $firstDotPosition);

        return $substringBeforeDot;
    } else {
        // If no dot is found, handle the situation accordingly
        return "No dot found in the string.";
    }
}


//REWRITE
function getAiAndRePost($scrapedArticle, $post_id) {

    //
    //get AI ARTICLE
    //
    $aiGeneratedContent = generateContentWithAI($scrapedArticle, $source);


    if (strlen($aiGeneratedContent['content']) < 500) {
        my_second_log('ERROR', 'Content generated by AI too low, post not recreated.');
        return;
    }

    // Check if content generation was successful
    if ($aiGeneratedContent === 'error') {
        my_second_log('ERROR', 'Failed to regenerate content with AI.');
        return 'error';
    }

    my_second_log('INFO', 'AI content recreated success.');

    //
    // Create a NEW POST with the AI-generated content
    //
    return recreatePost($aiGeneratedContent, $post_id); // Returns 'success' or 'error'//maybe deprecated
}

function rewritePostAndPost($source, $original_url, $post_id) {
    
    my_second_log('INFO', 'START REWRITING: ' . $original_url);

    $scrapedData = getScrapedData($source, $original_url); //return scraped data


    if($scrapedData == null) {
        my_second_log('ERROR', 'Error scraped data is null');
        return null;
    }
    else if (is_array($scrapedData)) {
        $title = $scrapedData['title'];
        $url = $scrapedData['original-url'];

            my_second_log('INFO', 'Rescraped data success');

            $post_id = getAiAndRePost($scrapedData, $post_id); // return post ID
            if ($post_id !== 'error') {
                my_second_log('INFO', 'SUCCESS REWRITING updated ID: ' . $post_id);
            } else {
                my_second_log('ERROR', 'Failed to process and post article: ' . $url);
            }
        
    } else {
        my_second_log('ERROR', 'Invalid scraped data format: ');
    }
}